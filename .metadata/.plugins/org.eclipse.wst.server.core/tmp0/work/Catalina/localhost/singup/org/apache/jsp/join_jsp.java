/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2022-10-07 06:22:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import java.lang.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입 입력 화면</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	var form = document.loginForm;\r\n");
      out.write("	function checkLogin() {\r\n");
      out.write("		var joinForm = document.joinForm;\r\n");
      out.write("		var regExpId = /^[a-z|A-Z|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n");
      out.write("		var regExpName = /^[가-힣]*$/;\r\n");
      out.write("		var regExpPasswd = /^[0-9]*$/;\r\n");
      out.write("		var regExpPhone = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n");
      out.write("		var regExpEmail = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("		\r\n");
      out.write("		var form = document.loginForm;\r\n");
      out.write("		\r\n");
      out.write("		var phone = form.phone1.value + \"-\" +form.phone2.value + \"-\" + form.phone3.value;\r\n");
      out.write("		\r\n");
      out.write("		if(form.id.value==\"\") {\r\n");
      out.write("			alert(\"아이디를 입력해주세요\");\r\n");
      out.write("			form.id.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if(!regExpId.test(form.id.value)){\r\n");
      out.write("			alert(\"아이디는 문자로 시작해주세요!\");\r\n");
      out.write("			form.id.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}else if (form.id.value.length < 4 || form.id.value.length > 12) {\r\n");
      out.write("			alert(\"아이디는 4 ~ 12자 이내로 입력 가능합니다!\");\r\n");
      out.write("			form.id.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (form.pw.value==\"\"){\r\n");
      out.write("			alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("			form.pw.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (form.pw.value.length < 8 || form.pw.value.length > 14){\r\n");
      out.write("			alert(\"비밀번호는 8 ~ 14자 이내로 입력 가능합니다.\");\r\n");
      out.write("			form.pw.focus();\r\n");
      out.write("			return false;	\r\n");
      out.write("		} else if(!regExpPasswd.test(form.pw.value)){\r\n");
      out.write("			alert(\"비밀번호는 숫자만입력해주세요!\");\r\n");
      out.write("			form.pw.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if(form.name.value==\"\"){\r\n");
      out.write("			alert(\"이름을 입력해 주세요.\");\r\n");
      out.write("			form.name.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if(!regExpName.test(form.name.value)){\r\n");
      out.write("			alert(\"이름은 한글만 입력해주세요\");\r\n");
      out.write("			form.name.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (!regExpEmail.test(form.email.value)){\r\n");
      out.write("			alert(\"이메일 입력을 확인해주세요\");\r\n");
      out.write("			form.email.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if(!regExpPhone.test(phone)){\r\n");
      out.write("			alert(\"연락처 입력을 확인해주세요\");\r\n");
      out.write("			form.phone2.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		form.submit();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	<!-- 아이디중복체크 -->\r\n");
      out.write("	function fn_dbCheckId(){\r\n");
      out.write("		\r\n");
      out.write("		var form = document.loginForm;\r\n");
      out.write("		//새창을 열어서 페이지를 오픈 후 -> 회원아이디정보를 가지고 중복체크\r\n");
      out.write("		//1. 아이디가 없으면 알림창과 진행x\r\n");
      out.write("		if(form.id.value == \"\" || form.id.value.length < 0){\r\n");
      out.write("			alert(\"아이디를 먼저 입력해주세요.\")\r\n");
      out.write("			document.fr.id.focus();\r\n");
      out.write("		}else{\r\n");
      out.write("			//2. 회원정보아이디를 가지고 있는 지 체크하려면 DB에 접근해야한다.\r\n");
      out.write("			//자바스크립트로 어떻게 DB에 접근할까? => 파라미터로 id값을 가져가서 jsp페이지에서 진행하면 된다.\r\n");
      out.write("			alert(\"사용가능한 아이디 입니다.\")\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h2>회원가입</h2>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"join_ok.jsp\" method=\"post\" name=\"loginForm\">\r\n");
      out.write("		아이디:<input type=\"text\" name=\"id\">\r\n");
      out.write("		<input type=\"button\" value=\"중복확인\" class=\"dup\" onclick=\"fn_dbCheckId()\" name=\"dbCheckId\" class=\"IdCheck\"><br>\r\n");
      out.write("		<input type=\"hidden\" name=\"idDuplication\" value=\"idUncheck\">\r\n");
      out.write("		비밀번호:<input type=\"password\" name=\"pw\"><br/>\r\n");
      out.write("		이름:<input type=\"text\" name=\"name\"><br/>\r\n");
      out.write("		이메일:<input type=\"text\" name=\"email\"><br/>\r\n");
      out.write("		전화번호:\r\n");
      out.write("		<select name=\"phone1\">\r\n");
      out.write("			<option>010</option>\r\n");
      out.write("			<option>02</option>\r\n");
      out.write("			<option>031</option>\r\n");
      out.write("			<option>051</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" name=\"phone2\" size=\"5\" maxlength=\"4\">\r\n");
      out.write("		<input type=\"text\" name=\"phone3\" size=\"5\" maxlength=\"4\">\r\n");
      out.write("		\r\n");
      out.write("		<br/>\r\n");
      out.write("		<input type=\"radio\" name=\"gender\" value=\"m\" checked>남자\r\n");
      out.write("		<input type=\"radio\" name=\"gender\" value=\"f\">여자\r\n");
      out.write("		\r\n");
      out.write("		<input type=\"button\" value=\"가입\" onclick=\"checkLogin()\">\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
